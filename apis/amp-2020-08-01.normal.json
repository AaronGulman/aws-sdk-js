{
  "version": "2.0",
  "metadata": {
    "apiVersion": "2020-08-01",
    "endpointPrefix": "aps",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "Amazon Prometheus Service",
    "serviceId": "amp",
    "signatureVersion": "v4",
    "signingName": "aps",
    "uid": "amp-2020-08-01"
  },
  "operations": {
    "CreateWorkspace": {
      "name": "CreateWorkspace",
      "http": {
        "method": "POST",
        "requestUri": "/workspaces",
        "responseCode": 202
      },
      "input": {
        "shape": "CreateWorkspaceRequest"
      },
      "output": {
        "shape": "CreateWorkspaceResponse"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "documentation": "<p>Creates a new AMP workspace.</p>",
      "idempotent": true
    },
    "DeleteWorkspace": {
      "name": "DeleteWorkspace",
      "http": {
        "method": "DELETE",
        "requestUri": "/workspaces/{workspaceId}",
        "responseCode": 202
      },
      "input": {
        "shape": "DeleteWorkspaceRequest"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "documentation": "<p>Deletes an AMP workspace.</p>",
      "idempotent": true
    },
    "DescribeWorkspace": {
      "name": "DescribeWorkspace",
      "http": {
        "method": "GET",
        "requestUri": "/workspaces/{workspaceId}",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeWorkspaceRequest"
      },
      "output": {
        "shape": "DescribeWorkspaceResponse"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "documentation": "<p>Describes an existing AMP workspace.</p>"
    },
    "ListTagsForResource": {
      "name": "ListTagsForResource",
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "output": {
        "shape": "ListTagsForResourceResponse"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "documentation": "<p>Lists the tags you have assigned to the resource.</p>"
    },
    "ListWorkspaces": {
      "name": "ListWorkspaces",
      "http": {
        "method": "GET",
        "requestUri": "/workspaces",
        "responseCode": 200
      },
      "input": {
        "shape": "ListWorkspacesRequest"
      },
      "output": {
        "shape": "ListWorkspacesResponse"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "documentation": "<p>Lists all AMP workspaces, including workspaces being created or deleted.</p>"
    },
    "TagResource": {
      "name": "TagResource",
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 200
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "output": {
        "shape": "TagResourceResponse"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "documentation": "<p>Creates tags for the specified resource.</p>"
    },
    "UntagResource": {
      "name": "UntagResource",
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 200
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "output": {
        "shape": "UntagResourceResponse"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "documentation": "<p>Deletes tags from the specified resource.</p>",
      "idempotent": true
    },
    "UpdateWorkspaceAlias": {
      "name": "UpdateWorkspaceAlias",
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/alias",
        "responseCode": 204
      },
      "input": {
        "shape": "UpdateWorkspaceAliasRequest"
      },
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "documentation": "<p>Updates an AMP workspace alias.</p>",
      "idempotent": true
    }
  },
  "shapes": {
    "CreateWorkspaceRequest": {
      "type": "structure",
      "members": {
        "alias": {
          "shape": "WorkspaceAlias",
          "documentation": "<p>An optional user-assigned alias for this workspace. This alias is for user reference and does not need to be unique.</p>"
        },
        "clientToken": {
          "shape": "IdempotencyToken",
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true
        },
        "tags": {
          "shape": "TagMap",
          "documentation": "<p>Optional, user-provided tags for this workspace.</p>"
        }
      },
      "documentation": "<p>Represents the input of a CreateWorkspace operation.</p>"
    },
    "CreateWorkspaceResponse": {
      "type": "structure",
      "required": [
        "arn",
        "status",
        "workspaceId"
      ],
      "members": {
        "arn": {
          "shape": "WorkspaceArn",
          "documentation": "<p>The ARN of the workspace that was just created.</p>"
        },
        "status": {
          "shape": "WorkspaceStatus",
          "documentation": "<p>The status of the workspace that was just created (usually CREATING).</p>"
        },
        "tags": {
          "shape": "TagMap",
          "documentation": "<p>The tags of this workspace.</p>"
        },
        "workspaceId": {
          "shape": "WorkspaceId",
          "documentation": "<p>The generated ID of the workspace that was just created.</p>"
        }
      },
      "documentation": "<p>Represents the output of a CreateWorkspace operation.</p>"
    },
    "DeleteWorkspaceRequest": {
      "type": "structure",
      "required": [
        "workspaceId"
      ],
      "members": {
        "clientToken": {
          "shape": "IdempotencyToken",
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "location": "querystring",
          "locationName": "clientToken"
        },
        "workspaceId": {
          "shape": "WorkspaceId",
          "documentation": "<p>The ID of the workspace to delete.</p>",
          "location": "uri",
          "locationName": "workspaceId"
        }
      },
      "documentation": "<p>Represents the input of a DeleteWorkspace operation.</p>"
    },
    "DescribeWorkspaceRequest": {
      "type": "structure",
      "required": [
        "workspaceId"
      ],
      "members": {
        "workspaceId": {
          "shape": "WorkspaceId",
          "documentation": "<p>The ID of the workspace to describe.</p>",
          "location": "uri",
          "locationName": "workspaceId"
        }
      },
      "documentation": "<p>Represents the input of a DescribeWorkspace operation.</p>"
    },
    "DescribeWorkspaceResponse": {
      "type": "structure",
      "required": [
        "workspace"
      ],
      "members": {
        "workspace": {
          "shape": "WorkspaceDescription",
          "documentation": "<p>The properties of the selected workspace.</p>"
        }
      },
      "documentation": "<p>Represents the output of a DescribeWorkspace operation.</p>"
    },
    "IdempotencyToken": {
      "type": "string",
      "documentation": "<p>An identifier used to ensure the idempotency of a write request.</p>",
      "max": 64,
      "min": 1,
      "pattern": "[!-~]+"
    },
    "ListTagsForResourceRequest": {
      "type": "structure",
      "required": [
        "resourceArn"
      ],
      "members": {
        "resourceArn": {
          "shape": "String",
          "documentation": "<p>The ARN of the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn"
        }
      }
    },
    "ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "tags": {
          "shape": "TagMap"
        }
      }
    },
    "ListWorkspacesRequest": {
      "type": "structure",
      "members": {
        "alias": {
          "shape": "WorkspaceAlias",
          "documentation": "<p>Optional filter for workspace alias. Only the workspaces with aliases that begin with this value will be returned.</p>",
          "location": "querystring",
          "locationName": "alias"
        },
        "maxResults": {
          "shape": "ListWorkspacesRequestMaxResultsInteger",
          "documentation": "<p>Maximum results to return in response (default=100, maximum=1000).</p>",
          "location": "querystring",
          "locationName": "maxResults"
        },
        "nextToken": {
          "shape": "PaginationToken",
          "documentation": "<p>Pagination token to request the next page in a paginated list. This token is obtained from the output of the previous ListWorkspaces request.</p>",
          "location": "querystring",
          "locationName": "nextToken"
        }
      },
      "documentation": "<p>Represents the input of a ListWorkspaces operation.</p>"
    },
    "ListWorkspacesRequestMaxResultsInteger": {
      "type": "integer",
      "box": true,
      "max": 1000,
      "min": 1
    },
    "ListWorkspacesResponse": {
      "type": "structure",
      "required": [
        "workspaces"
      ],
      "members": {
        "nextToken": {
          "shape": "PaginationToken",
          "documentation": "<p>Pagination token to use when requesting the next page in this list.</p>"
        },
        "workspaces": {
          "shape": "WorkspaceSummaryList",
          "documentation": "<p>The list of existing workspaces, including those undergoing creation or deletion.</p>"
        }
      },
      "documentation": "<p>Represents the output of a ListWorkspaces operation.</p>"
    },
    "PaginationToken": {
      "type": "string",
      "documentation": "<p>A token used to access the next page in a paginated result set.</p>"
    },
    "String": {
      "type": "string"
    },
    "TagKey": {
      "type": "string",
      "max": 128,
      "min": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    },
    "TagKeys": {
      "type": "list",
      "member": {
        "shape": "TagKey"
      }
    },
    "TagMap": {
      "type": "map",
      "key": {
        "shape": "TagKey",
        "documentation": "<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 128 Unicode characters. Valid characters are Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @ May not begin with <code>aws:</code>.</p>"
      },
      "value": {
        "shape": "TagValue",
        "documentation": "<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 256 Unicode characters. Valid characters are Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @</p>"
      },
      "documentation": "<p>The list of tags assigned to the resource.</p>",
      "max": 50,
      "min": 0
    },
    "TagResourceRequest": {
      "type": "structure",
      "required": [
        "resourceArn",
        "tags"
      ],
      "members": {
        "resourceArn": {
          "shape": "String",
          "documentation": "<p>The ARN of the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn"
        },
        "tags": {
          "shape": "TagMap"
        }
      }
    },
    "TagResourceResponse": {
      "type": "structure",
      "members": {}
    },
    "TagValue": {
      "type": "string",
      "max": 256,
      "min": 0,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
    },
    "Timestamp": {
      "type": "timestamp"
    },
    "UntagResourceRequest": {
      "type": "structure",
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "members": {
        "resourceArn": {
          "shape": "String",
          "documentation": "<p>The ARN of the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn"
        },
        "tagKeys": {
          "shape": "TagKeys",
          "documentation": "<p>One or more tag keys</p>",
          "location": "querystring",
          "locationName": "tagKeys"
        }
      }
    },
    "UntagResourceResponse": {
      "type": "structure",
      "members": {}
    },
    "UpdateWorkspaceAliasRequest": {
      "type": "structure",
      "required": [
        "workspaceId"
      ],
      "members": {
        "alias": {
          "shape": "WorkspaceAlias",
          "documentation": "<p>The new alias of the workspace.</p>"
        },
        "clientToken": {
          "shape": "IdempotencyToken",
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true
        },
        "workspaceId": {
          "shape": "WorkspaceId",
          "documentation": "<p>The ID of the workspace being updated.</p>",
          "location": "uri",
          "locationName": "workspaceId"
        }
      },
      "documentation": "<p>Represents the input of an UpdateWorkspaceAlias operation.</p>"
    },
    "Uri": {
      "type": "string",
      "max": 1024,
      "min": 1
    },
    "WorkspaceAlias": {
      "type": "string",
      "documentation": "<p>A user-assigned workspace alias.</p>",
      "max": 100,
      "min": 1
    },
    "WorkspaceArn": {
      "type": "string",
      "documentation": "<p>An ARN identifying a Workspace.</p>"
    },
    "WorkspaceDescription": {
      "type": "structure",
      "required": [
        "arn",
        "createdAt",
        "status",
        "workspaceId"
      ],
      "members": {
        "alias": {
          "shape": "WorkspaceAlias",
          "documentation": "<p>Alias of this workspace.</p>"
        },
        "arn": {
          "shape": "WorkspaceArn",
          "documentation": "<p>The Amazon Resource Name (ARN) of this workspace.</p>"
        },
        "createdAt": {
          "shape": "Timestamp",
          "documentation": "<p>The time when the workspace was created.</p>"
        },
        "prometheusEndpoint": {
          "shape": "Uri",
          "documentation": "<p>Prometheus endpoint URI.</p>"
        },
        "status": {
          "shape": "WorkspaceStatus",
          "documentation": "<p>The status of this workspace.</p>"
        },
        "tags": {
          "shape": "TagMap",
          "documentation": "<p>The tags of this workspace.</p>"
        },
        "workspaceId": {
          "shape": "WorkspaceId",
          "documentation": "<p>Unique string identifying this workspace.</p>"
        }
      },
      "documentation": "<p>Represents the properties of a workspace.</p>"
    },
    "WorkspaceId": {
      "type": "string",
      "documentation": "<p>A workspace ID.</p>",
      "max": 64,
      "min": 1,
      "pattern": "[0-9A-Za-z][-.0-9A-Z_a-z]*"
    },
    "WorkspaceStatus": {
      "type": "structure",
      "required": [
        "statusCode"
      ],
      "members": {
        "statusCode": {
          "shape": "WorkspaceStatusCode",
          "documentation": "<p>Status code of this workspace.</p>"
        }
      },
      "documentation": "<p>Represents the status of a workspace.</p>"
    },
    "WorkspaceStatusCode": {
      "type": "string",
      "documentation": "<p>State of a workspace.</p>",
      "enum": [
        "CREATING",
        "ACTIVE",
        "UPDATING",
        "DELETING",
        "CREATION_FAILED"
      ]
    },
    "WorkspaceSummary": {
      "type": "structure",
      "required": [
        "arn",
        "createdAt",
        "status",
        "workspaceId"
      ],
      "members": {
        "alias": {
          "shape": "WorkspaceAlias",
          "documentation": "<p>Alias of this workspace.</p>"
        },
        "arn": {
          "shape": "WorkspaceArn",
          "documentation": "<p>The AmazonResourceName of this workspace.</p>"
        },
        "createdAt": {
          "shape": "Timestamp",
          "documentation": "<p>The time when the workspace was created.</p>"
        },
        "status": {
          "shape": "WorkspaceStatus",
          "documentation": "<p>The status of this workspace.</p>"
        },
        "tags": {
          "shape": "TagMap",
          "documentation": "<p>The tags of this workspace.</p>"
        },
        "workspaceId": {
          "shape": "WorkspaceId",
          "documentation": "<p>Unique string identifying this workspace.</p>"
        }
      },
      "documentation": "<p>Represents a summary of the properties of a workspace.</p>"
    },
    "WorkspaceSummaryList": {
      "type": "list",
      "member": {
        "shape": "WorkspaceSummary"
      },
      "documentation": "<p>A list of workspace summaries.</p>"
    }
  },
  "documentation": "<p>Amazon Managed Service for Prometheus</p>"
}